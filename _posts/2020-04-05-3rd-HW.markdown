---
layout: post
author: Younji Kim
---
3주차 수업이 시작되었다. 사용자 관리라는 개념에 들어가기 앞서 리눅스가 여러 사용자가 동시에 접속 가능한 다중 사용자 시스템이라는 것과 모든 사용자들은 하나 이상의 그룹에 소속된다는 기본적인 정보에 대해 알아보았다. /etc/passwd와 /etc/group을 이용하여 사용자와 그룹의 정보를 확인하고 adduser, usermod, userdel 등을 이용하여 사용자계정의 생성 및 관리를, groupadd, groupmod groupdel 등을 이용하여 그룹들을 생성하고 관리하는 방법을 알게 되었다. 또한 리눅스의 파일 시스템에 대해서도 배웠다. 파일과 디렉터리는 소유권과 허가권이 있는데, 파일 소유권은 말 그대로 누가 그 파일(또는 디렉터리)을 누가 소유하고 있는지, 누가 파일을 관리할 수 있는지 나타내주는 것이며 허가권은 소유자, 그룹, 그 외 사용자가 읽기(r), 쓰기(w), 실행하기(x) 이 세가지 중 어떤 것을 사용할 수 있는지를 나타내준다. 파일 소유권은 chown, 파일 허가권은 chmod 명령어를 사용한다. 이 명령어들의 앞에 붙은 ch는 change의 약자인 것 같다. 리눅스에서는 링크파일이라는 유형도 있는데 하드링크, 심벌릭 링크 이 두가지로 나뉘어진다. 하드 링크는 복사본을 만드는 것이며, 심볼릭 링크는 윈도우로 치면 바로가기이다. 작년에 배웠었는데 어쩐지 처음 듣는 느낌이었다. 사실 하드 링크와 심볼릭 링크를 작년에 잘 구분하지 못했던 것 같은데, 교수님이 복사본과 바로가기라고 직관적으로 설명을 해주셔서 딱 알았다!    
1주차에서 배웠던 데비안 리눅스의 강점 중 패키지 설치 프로그램을 사용할 수 있다는 게 있었는데, 이번 주차에서 더욱 자세하게 그 내용을 배워봤다. 데비안 리눅스에선 그 전까지의 리눅스 버전과는 다르게 .deb확장자인 파일이 있는 전제로 dpkg 명령어를 사용하여 바로 실행하여 설치할 수 있다. 이 명령어에서 좀 더 나아간 건 apt-get이다. 온라인 저장소에서 직접 패키지를 다운받고, 의존성(프로그램을 설치하기 위해 미리 필요한 파일 등)문제라는 것도 파악한다. 오늘날에는 다들 apt-get 명령어를 쓰는 것 같다. apt-get install이라는 명령어를 통해 설치하고, update를 통해 업데이트한다. 1주차 때 쿠분투 한글 입력이 안되서 어중이떠중이로 이 명령어를 이용해 nabi 한글 입력기를 설치했던 게 새록새록 기억났다. 이 명령어를 입력했을때 흝고 지나가는 파일인 sources.list를 카카오사의 파일을 설치하도록 작성하는 실습도 해보았다. 또한 우분투 패키지 저장소를 미러 사이트라고 한다는 것도 알게 되었다.
텍스트 모드를 사용하는 Server(B)에서는 GRUB메뉴를 실행하고 부트로더 설정 변경과 사용자 생성하는 방법을 알아보았다. 응급복구가 왜 응급인지 알겠다. 혹시라도 비밀번호를 잊어버렸을 때의 최후의 보루를 남겨두는 느낌이었다.
        
실습과제를 할 때, w-user와 d-user만 info.sh를 수정할 수 있도록 하기 위해 소유권 변경을 하는 부분에서 잠깐 고민했었다. 파일 소유권을 변경하는 명령어를 배울 때 PPT에서는 그룹만 바꿀 때는 chgrp 명령어를 쓰도록 나와있는데 교수님이 영상에서 chown 다음에 사용자명을 생략하시고 .그룹명을 썼었다. 뭔가 둘 다 되는 것 같긴 한데 긴가민가해서 구글링을 해보았다. <https://blog.naver.com/cksdud1113/221627421200>에서 chown을 쓴 뒤에 사용자명을 생략한 채 그룹명을 써도 된다는 답을 얻었다. 긴가민가하게 지나갈 뻔 했던 내용은 사용자명은 생략해도 되지만 :이나 .을 쓰고 그룹명을 안쓰면 안된다는 것이었다. **그룹이름과 사용자명이 똑같아서 생략**했다는 효과가 나기 때문에 소유그룹이 사용자명과 똑같은 이름의 그룹으로 변경된다는 것이다. 또 chown을 쓸 때 그룹도 같이 쓰기 위해서 .을 쓴다고 배웠는데 :도 같은 역할을 한다는 것을 알게 되었다. 
막혔던 부분이 한 가지 더 있었다. info.sh 파일을 실행하는 데 처음엔 root계정으로 로그인 한 상태로 캡쳐했지만 w-user계정으로도 실행할 수 있다는 것을 캡쳐하기 위해 로그인하고, 실행시키려는데 실행이 안되서 당황했다. 과제 마감까지 얼마 안남아서(현재시각.. 11시 30분) 더 땀을 삐질 흘렸다. ls -il로 봐도 developer그룹이 읽고 쓰고 실행할 수 있는데.. id w-user로 봐도 developer그룹에 멀쩡히 잘 속해있는데.. 왜이러지?하고 계속 건들여보다가 info 디렉터리도 허가권을 변경했다는 게 기억났다. 경로를 보니 root계정으로 info 디렉터리를 들어온 상태에서 w-user로 로그인했었기에 혹시나 하는 마음으로 info 밖에서 w-user로 로그인하고 들어와봤다. 아니나 다를까 딱 성공했다!! 지금까지는 항상 구글링의 도움을 받았지만 이번에는 나 혼자의 힘으로 해결했다. 비록 엄청 간단한 문제였긴 했지만.. 문제를 해결하고 나서의 뿌듯함이 너무 다르다~!

오늘은 정말 '관리자'가 사용할 법한 명령어들을 많이 배워서 보람찼다. '정말 내가 컴퓨터를 관리할 수 있게 되겠구나'라는 느낌이 확 들었기 때문이다. 강의를 들으려는데 머리가 너무 아파서 앞부분을 집중을 못했었다. 그래서 떠듬떠듬 따라갔지만 다른 강의를 들을 때보다 공부효율이 낮은 것 같아서 실습과제가 걱정되었었다. 그런데 과제를 하면서, 당연하다면 당연하겠지만 명령어를 쓰면 쓸수록 머릿속에 착착 정리되는 게 느껴졌다. 확실히 강의를 보면서 따라하는 것보다 주어진 과제(미션)를 해결하기 위해 머리를 굴리는 게 효과가 정말 좋다고 생각했다. 그리고 교수님이 과제를 올릴 때 한 사이트에다 전부 올려서 관리하는 게 좋다고 하셔서 github에 올린 게 조금 걱정이 되었다. 그냥 파일형식으로 보이는 것이라서 뽀대가 안날까봐 염려스러웠다. 그래서 다른 방법이 없을까 찾아보는데,github가 웹페이지라는 기능도 제공한다는 글을 보았다. 아니나 다를까 이미 github로 블로그까지 만든 사람이 있었다. 이 방법이 딱 좋겠다 싶어 빠르게 블로그를 만들어보았다. 깃허브 블로그도 처음해보는 거라 많이 서투를 것 같지만 무사히 yml파일을 편집하여 블로그 이름과 정보 수정하는 것을 성공하였고, 1 2주차 실습일지 올리는 것에도 성공했다. 다른 사이트의 블로그들은 그냥 글자를 쓰면 되는 것과는 다르게 깃허브 블로그는 전부 마크다운으로 쳐야하지만 마크다운도 계속 쓰다보니 그냥 글씨 쓰는 것과는 또 다른 느낌이 있어서 재밌었다. 한가지 막혔던 것은.. 보고서를 올리는 데 사진이 계속 깨져서 보인다..ㅠ 급한 대로 블로그에 올려서 주소를 가져왔지만 조만간 새로운 방법을 찾아서 깃에 대한 마스터가 되야지!